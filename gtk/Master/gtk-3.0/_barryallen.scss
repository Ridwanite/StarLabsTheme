@mixin headerbar_fill($c:$headerbar_color, $hc:$top_hilight) {
//
// headerbar fill
//
// $c:base color
// $hc: top highlight color

	$gradient: linear-gradient(to top, lighten($c, 1%), lighten($c, 2%));
	@if $variant == 'dark' {
		$gradient: linear-gradient(to top, darken($c, 4%), darken($c, 6%));
	}

	background: $c $gradient;

//	box-shadow: inset 0 1px $hc; // top highlight
	box-shadow: none;
	border: none;
}


@mixin sidebar_fill($c:$headerbar_color, $hc:$top_hilight, $ov: none) {
//
// sidebar fill
//
// $c:base color
// $hc: top highlight color

	$gradient: linear-gradient(to top, lighten($c, 2%), lighten($c, 1%));
	@if $variant == 'dark'{
		$gradient: linear-gradient(to top, darken($c, 6%), darken($c, 4%));
	}

	background: $c $gradient;
//	//box-shadow: inset 0 1px $hc; // top highlight
	border: none;
	box-shadow: none;
}

%titlebar,
.titlebar,
headerbar {
	&, separator {
	@include headerbar_fill($headerbar_bg_color, $hc: $headerbar_bg_color);
		&:backdrop {
			@include headerbar_fill($backdrop_headerbar_bg_color, $hc: $backdrop_headerbar_bg_color);
		}
	}
}

list.tweak-categories,
scrolledwindow viewport > stack list,
.sidebar list {
	@include sidebar_fill($headerbar_bg_color, $hc: $headerbar_bg_color);
	&:backdrop {
		@include sidebar_fill($backdrop_headerbar_bg_color, $hc: $backdrop_headerbar_bg_color);
	}
}

list.tweak-categories,
scrolledwindow viewport > stack list,
.sidebar list {
	& label, & image {
		color: $headerbar_fg_color;
	}
	row.activatable:hover, row:not(:selected):not(:backdrop):hover {
		color: $white;
		background-color: $accent3;
		& label, & image {
			color: $white;
		}
	}
	row.activatable:selected {
		color: $fg_color;
		background-color: $bg_color;
		& label, & image {
			color: $fg_color;
		}
	}
	&:backdrop {
		transition: $backdrop_transition;
		& label, & image {
			color: $backdrop_fg_color;
		}

		row:selected {
			color: $backdrop_fg_color;
			background-color: $backdrop_bg_color;
			& label, & image {
				color: $backdrop_fg_color;
			}
		}
	}
}
separator,
paned > separator,
window > box > separator,
.sidebar,
stacksidebar.sidebar:dir(ltr) list, stacksidebar.sidebar.left list, stacksidebar.sidebar.left:dir(rtl) list, .sidebar:dir(ltr), .sidebar.left, .sidebar.left:dir(rtl), 
.nautilus-window paned > separator {
	&, &:backdrop {
		background-color: transparent;
		border-color: transparent;
		background: image(transparent);
	}
}


// Window Close button
button.titlebutton:not(.appmenu) {
		&, &:hover, &:active {
			headerbar &, .titlebar &, headerbar.selection-mode & {
				background-image: none;
				@include button(normal, $headerbar_bg_color, $headerbar_fg_color);					
				&:backdrop {
					background-image: none;
					@include button(normal, $backdrop_headerbar_bg_color, $backdrop_headerbar_fg_color);
				}
			}
		}
	
		headerbar &, .titlebar &, headerbar.selection-mode &, & {
			&, &.maximize, &.minimize, &.close {
				&, &:backdrop {
					&, &:hover, &:active {
						border-radius: $button_radius;
					}
				}
			}
			&.maximize, &.minimize {
				&, &:backdrop {
					&:hover {
						background: $accent-normal;
						color: $accent-fg;
					}
					&:active {
						background: $accent-hover;
						color: $accent-fg;
					}
				}
			}
			&.close {
				background: $accent-normal;
				color: $accent-fg;
				&:hover {
					background: $accent-hover;
				}
				&:active {
					background: $accent-active;
				}
				&:backdrop {
					background: lighten($accent-normal, 5%);
					&:hover {
						background: lighten($accent-hover, 5%);
					}
				}
			}
		}
	
}




.nautilus-window {
	background-color: $bg_color;
	&:backdrop {
		background-color: $backdrop_bg_color;
	}
}

@if $variant == 'light' {
	@if $header == 'dark' {
		menubar, 
		.menubar,
		menubar > menuitem:hover {
			background-color: $headerbar_bg_color;
			color: $headerbar_fg_color;
			&:backdrop {
				background-color: $backdrop_headerbar_bg_color;
				color: $backdrop_headerbar_fg_color;
			}
		}
	}
}
terminal-window {

    // use unity 8 colors
    // only colors, let everything else be inherited
    .terminal-screen {
        // inherits from .background
        background-color: $terminal_bg_color;
        color: $terminal_fg_color;

        &:backdrop {
            background-color: lighten($terminal_bg_color, 2%);
            color: $backdrop_selected_fg_color;
        }
    }
}
